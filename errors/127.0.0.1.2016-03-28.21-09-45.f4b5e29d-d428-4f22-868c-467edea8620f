(dp1
S'output'
p2
S"<class 'sqlite3.OperationalError'> Cannot add a UNIQUE column"
p3
sS'layer'
p4
S'/home/navya/itws2/web2pynew/applications/FOODILY/models/db.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n#########################################################################\n## This scaffolding model makes your app work on Google App Engine too\n## File is released under public domain and you can use without limitations\n#########################################################################\n\n## if SSL/HTTPS is properly configured and you want all HTTP requests to\n## be redirected to HTTPS, uncomment the line below:\n# request.requires_https()\n\nif not request.env.web2py_runtime_gae:\n    ## if NOT running on Google App Engine use SQLite or other DB\n    db = DAL(\'sqlite://storage.sqlite\',pool_size=1,check_reserved=[\'all\'])\nelse:\n    ## connect to Google BigTable (optional \'google:datastore://namespace\')\n    db = DAL(\'google:datastore\')\n    ## store sessions and tickets there\n    session.connect(request, response, db=db)\n    ## or store session in Memcache, Redis, etc.\n    ## from gluon.contrib.memdb import MEMDB\n    ## from google.appengine.api.memcache import Client\n    ## session.connect(request, response, db = MEMDB(Client()))\n\n## by default give a view/generic.extension to all actions from localhost\n## none otherwise. a pattern can be \'controller/function.extension\'\nresponse.generic_patterns = [\'*\'] if request.is_local else []\n## (optional) optimize handling of static files\n# response.optimize_css = \'concat,minify,inline\'\n# response.optimize_js = \'concat,minify,inline\'\n\n#########################################################################\n## Here is sample code if you need for\n## - email capabilities\n## - authentication (registration, login, logout, ... )\n## - authorization (role based authorization)\n## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)\n## - old style crud actions\n## (more options discussed in gluon/tools.py)\n#########################################################################\n\nfrom gluon.tools import Auth, Crud, Service, PluginManager, prettydate\nauth = Auth(db)\ncrud, service, plugins = Crud(db), Service(), PluginManager()\n\nauth.settings.extra_fields[\'auth_user\']= [\n  Field(\'Gender\',\'string\',requires=IS_IN_SET([\'Male\',\'Female\'])),\n  Field(\'Birthdate\',\'date\',required=True,requires = IS_DATE_IN_RANGE(0-0-0,request.now.date())),\n  Field(\'Hometown\',\'string\',required=True,),\n ]\n\n## create all tables needed by auth if not custom tables\nauth.define_tables(username=False, signature=False)\n\n## configure email\nmail = auth.settings.mailer\nmail.settings.server = \'logging\' or \'smtp.gmail.com:587\'\nmail.settings.sender = \'you@gmail.com\'\nmail.settings.login = \'username:password\'\n\n## configure auth policy\nauth.settings.registration_requires_verification = False\nauth.settings.registration_requires_approval = False\nauth.settings.reset_password_requires_verification = True\n\n## if you need to use OpenID, Facebook, MySpace, Twitter, Linkedin, etc.\n## register with janrain.com, write your domain:api_key in private/janrain.key\nfrom gluon.contrib.login_methods.rpx_account import use_janrain\nuse_janrain(auth, filename=\'private/janrain.key\')\n\n#########################################################################\n## Define your tables below (or better in another model file) for example\n##\n## >>> db.define_table(\'mytable\',Field(\'myfield\',\'string\'))\n##\n## Fields can be \'string\',\'text\',\'password\',\'integer\',\'double\',\'boolean\'\n##       \'date\',\'time\',\'datetime\',\'blob\',\'upload\', \'reference TABLENAME\'\n## There is an implicit \'id integer autoincrement\' field\n## Consult manual for more options, validators, etc.\n##\n## More API examples for controllers:\n##\n## >>> db.mytable.insert(myfield=\'value\')\n## >>> rows=db(db.mytable.myfield==\'value\').select(db.mytable.ALL)\n## >>> for row in rows: print row.id, row.myfield\n#########################################################################\n\n## after defining tables, uncomment below to enable auditing\n# auth.enable_record_versioning(db)\n\n#db.define_table(\'recipe\',\n#\t\tField(\'name\',\'text\',required=True),\n#\t\tField(\'text\',\'text\',required=True),\n\t\t#Field(\'picture\',\'upload\',uploadfield=\'picture_file\',required=True),\n#\t\tField(\'picture_file\', \'blob\'),\n#\t\tauth.signature\n#\t\t)  \n\ndb.define_table(\'posts\',\n\t\tField(\'post_text\',\'text\',label=\'Title\'),\n        Field(\'authur\',\'text\'),\n        Field(\'description\',\'text\'),\n        Field(\'detailed_description\',\'text\'),\n        Field(\'image\',\'upload\'),\n        auth.signature\n\t\t)    \n\ndb.define_table(\'comment_post\',\n\t\tField(\'body\',\'string\',label=\'Your comment\'),\n\t\tField(\'postid\',\'reference posts\'),\n\t\tauth.signature\n\t\t)\ndb.define_table(\'likes\',\n    Field(\'username\', \'reference auth_user\'),\n    Field(\'postname\', \'reference posts\'),\n    Field(\'unique_key\', unique=True, notnull=True,  compute= lambda row: "%(username)s-%(songname)s"),\n     \n)\n\nif auth.is_logged_in():\n    already_liked = db((db.likes.username==auth.user.id) & (db.likes.playlist_name==request.vars.playlist_name))\n\n    db.likes.songname.requires=IS_NOT_IN_DB(already_liked, \'likes.postname\')\n#db.define_table(\'likes\',\n#        Field(\'total_likes\',\'integer\'),\n#        Field(\'user_name\',\'text\'),\n#        Field(\'postid\',\'reference posts\'),\n#        auth.signature\n#)\n\n#db.define_table(\'images\',\n #   Field(\'picture\', \'upload\', uploadfield=\'picture_file\'),\n  #  Field(\'picture_file\', \'blob\')\n   # )\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'sqlite3'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of OperationalError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of OperationalError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of OperationalError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of OperationalError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of OperationalError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of OperationalError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of OperationalError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of OperationalError object>'
p35
sS'__class__'
p36
S"<class 'sqlite3.OperationalError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of OperationalError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of OperationalError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of OperationalError object>"
p45
sS'args'
p46
S"('Cannot add a UNIQUE column',)"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of OperationalError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of OperationalError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of OperationalError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of OperationalError object>"
p57
ssS'evalue'
p58
S'Cannot add a UNIQUE column'
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's\x17[\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">ajax</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">application</td><td valign="top">:</td><td><div>FOODILY</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">args</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">body</td><td valign="top">:</td><td><div>&lt;cStringIO.StringO object at 0x7fcc828adf10&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cid</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">client</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">controller</td><td valign="top">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cookies</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">session_id_admin</td><td valign="top">:</td><td><div>127.0.0.1-68491556-bb28-4d76-a71f-55aaa66a89ee<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_foodily</td><td valign="top">:</td><td><div>127.0.0.1-f0fe83a9-9f91-49b4-a79b-fe291c9fa20d<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_postsapp</td><td valign="top">:</td><td><div>127.0.0.1-37200d91-f9fd-41af-8225-4cbca5cfcd2f<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_welcome</td><td valign="top">:</td><td><div>127.0.0.1-4377fd81-780a-4bb4-b5d6-e34213f60670<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">env</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">app_folders</td><td valign="top">:</td><td><div>set([&#x27;/home/navya/itws2/web2pynew/applications/admin/&#x27;, &#x27;/home/navya/itws2/web2pynew/applications/welcome/&#x27;, &#x27;/home/navya/itws2/web2pynew/applications/FOODILY/&#x27;, &#x27;/home/navya/itws2/web2pynew/applications/PostsApp/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">applications_parent</td><td valign="top">:</td><td><div>/home/navya/itws2/web2pynew</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_args</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_options</td><td valign="top">:</td><td><div>&lt;Values at 0x7fccb6c30b48: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;navya&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/navya/itws2/web2pynew&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;winservice&#x27;: &#x27;&#x27;, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;profiler_filename&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;1234&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;interfaces&#x27;: None, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">db_sessions</td><td valign="top">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">debugging</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">gluon_parent</td><td valign="top">:</td><td><div>/home/navya/itws2/web2pynew</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept</td><td valign="top">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_encoding</td><td valign="top">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_language</td><td valign="top">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_cache_control</td><td valign="top">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_connection</td><td valign="top">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_cookie</td><td valign="top">:</td><td><div>session_id_welcome=127.0.0.1-4377fd81-780a-4bb4-b5d6-e34213f60670; session_id_admin=127.0.0.1-68491556-bb28-4d76-a71f-55aaa66a89ee; session_id_foodily=127.0.0.1-f0fe83a9-9f91-49b4-a79b-fe291c9fa20d; session_id_postsapp=127.0.0.1-37200d91-f9fd-41af-8225-4cbca5cfcd2f; __atuvc=2%7C13</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_host</td><td valign="top">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_referer</td><td valign="top">:</td><td><div>http://127.0.0.1:8000/FOODILY/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_user_agent</td><td valign="top">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:43.0) Gecko/20100101 Firefox/43.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_jython</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_pypy</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">local_hosts</td><td valign="top">:</td><td><div><table><tr><td><div>navya</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path_info</td><td valign="top">:</td><td><div>/FOODILY/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">query_string</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remote_addr</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remote_port</td><td valign="top">:</td><td><div>46043</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">request_method</td><td valign="top">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">request_uri</td><td valign="top">:</td><td><div>/FOODILY/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">script_name</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_name</td><td valign="top">:</td><td><div>navya</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_port</td><td valign="top">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_protocol</td><td valign="top">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_software</td><td valign="top">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_path</td><td valign="top">:</td><td><div>/home/navya/itws2/web2pynew</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_version</td><td valign="top">:</td><td><div><table><tr><td><div>2</div></td></tr><tr><td><div>4</div></td></tr><tr><td><div>2</div></td></tr><tr><td><div>stable</div></td></tr><tr><td><div>datetime.datetime(2013, 3, 4, 3, 26, 21)</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_errors</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7fccbafc61e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_file_wrapper</td><td valign="top">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7fccb67e2600&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_input</td><td valign="top">:</td><td><div>&lt;socket._fileobject object at 0x7fcc828769d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_multiprocess</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_multithread</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_run_once</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_url_scheme</td><td valign="top">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_version</td><td valign="top">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">extension</td><td valign="top">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">folder</td><td valign="top">:</td><td><div>/home/navya/itws2/web2pynew/applications/FOODILY/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">function</td><td valign="top">:</td><td><div>index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">get_vars</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">global_settings</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">app_folders</td><td valign="top">:</td><td><div>set([&#x27;/home/navya/itws2/web2pynew/applications/admin/&#x27;, &#x27;/home/navya/itws2/web2pynew/applications/welcome/&#x27;, &#x27;/home/navya/itws2/web2pynew/applications/FOODILY/&#x27;, &#x27;/home/navya/itws2/web2pynew/applications/PostsApp/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">applications_parent</td><td valign="top">:</td><td><div>/home/navya/itws2/web2pynew</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_args</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_options</td><td valign="top">:</td><td><div>&lt;Values at 0x7fccb6c30b48: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;navya&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/navya/itws2/web2pynew&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;winservice&#x27;: &#x27;&#x27;, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;profiler_filename&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;1234&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;interfaces&#x27;: None, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">db_sessions</td><td valign="top">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">debugging</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">gluon_parent</td><td valign="top">:</td><td><div>/home/navya/itws2/web2pynew</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_jython</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_pypy</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">local_hosts</td><td valign="top">:</td><td><div><table><tr><td><div>navya</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_version</td><td valign="top">:</td><td><div><table><tr><td><div>2</div></td></tr><tr><td><div>4</div></td></tr><tr><td><div>2</div></td></tr><tr><td><div>stable</div></td></tr><tr><td><div>datetime.datetime(2013, 3, 4, 3, 26, 21)</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_https</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_local</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_restful</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">now</td><td valign="top">:</td><td><div>datetime.datetime(2016, 3, 28, 21, 9, 45, 544677)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">post_vars</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">raw_args</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">raw_extension</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">url</td><td valign="top">:</td><td><div>/FOODILY/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">utcnow</td><td valign="top">:</td><td><div>datetime.datetime(2016, 3, 28, 15, 39, 45, 544709)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">uuid</td><td valign="top">:</td><td><div>FOODILY/127.0.0.1.2016-03-28.21-09-45.f4b5e29d-d428-4f22-868c-467edea8620f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">vars</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">environ</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT</td><td valign="top">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_ENCODING</td><td valign="top">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_LANGUAGE</td><td valign="top">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_CACHE_CONTROL</td><td valign="top">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_CONNECTION</td><td valign="top">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_COOKIE</td><td valign="top">:</td><td><div>session_id_welcome=127.0.0.1-4377fd81-780a-4bb4-b5d6-e34213f60670; session_id_admin=127.0.0.1-68491556-bb28-4d76-a71f-55aaa66a89ee; session_id_foodily=127.0.0.1-f0fe83a9-9f91-49b4-a79b-fe291c9fa20d; session_id_postsapp=127.0.0.1-37200d91-f9fd-41af-8225-4cbca5cfcd2f; __atuvc=2%7C13</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_HOST</td><td valign="top">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_REFERER</td><td valign="top">:</td><td><div>http://127.0.0.1:8000/FOODILY/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_USER_AGENT</td><td valign="top">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:43.0) Gecko/20100101 Firefox/43.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">PATH_INFO</td><td valign="top">:</td><td><div>/FOODILY/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">QUERY_STRING</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REMOTE_ADDR</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REMOTE_PORT</td><td valign="top">:</td><td><div>46043</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REQUEST_METHOD</td><td valign="top">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REQUEST_URI</td><td valign="top">:</td><td><div>/FOODILY/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SCRIPT_NAME</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_NAME</td><td valign="top">:</td><td><div>navya</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_PORT</td><td valign="top">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_PROTOCOL</td><td valign="top">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_SOFTWARE</td><td valign="top">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.errors</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7fccbafc61e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.file_wrapper</td><td valign="top">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7fccb67e2600&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.input</td><td valign="top">:</td><td><div>&lt;cStringIO.StringO object at 0x7fcc828adf10&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.multiprocess</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.multithread</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.run_once</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.url_scheme</td><td valign="top">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.version</td><td valign="top">:</td><td><div>1</div></td></tr></table></div></td></tr></table></div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'/home/navya/itws2/web2pynew/gluon/restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 0x7fcc828aeb30, file "/...ynew/applications/FOODILY/models/db.py", line 12>'
p73
ssS'lnum'
p74
I212
sS'lines'
p75
(dp76
I207
S'    try:'
p77
sI208
S'        if isinstance(code, types.CodeType):'
p78
sI209
S'            ccode = code'
p79
sI210
S'        else:'
p80
sI211
S'            ccode = compile2(code, layer)'
p81
sI212
S'        exec ccode in environment'
p82
sI213
S'    except HTTP:'
p83
sI214
S'        raise'
p84
sI215
S'    except RestrictedError:'
p85
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p86
ssS'call'
p87
S'(code="# -*- coding: utf-8 -*-\\n\\n#######################...ile\'),\\n  #  Field(\'picture_file\', \'blob\')\\n   # )\\n", environment={\'A\': <class \'gluon.html.A\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, \'CLEANUP\': <class \'gluon.validators.CLEANUP\'>, ...}, layer=\'/home/navya/itws2/web2pynew/applications/FOODILY/models/db.py\')'
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'/home/navya/itws2/web2pynew/applications/FOODILY/models/db.py'
p92
sg68
(dp93
S'compute'
p94
S'undefined'
p95
sS'builtinTrue'
p96
S'True'
p97
sS'Field'
p98
S"<class 'gluon.dal.Field'>"
p99
sS'notnull'
p100
g95
sS'unique'
p101
g95
sS'row'
p102
g95
ssg74
I116
sg75
(dp103
I111
S'\t\tauth.signature'
p104
sI112
S'\t\t)'
p105
sI113
S"db.define_table('likes',"
p106
sI114
S"    Field('username', 'reference auth_user'),"
p107
sI115
S"    Field('postname', 'reference posts'),"
p108
sI116
S'    Field(\'unique_key\', unique=True, notnull=True,  compute= lambda row: "%(username)s-%(songname)s"),'
p109
sI117
S''
sI118
S')'
sI119
S''
sI120
S'if auth.is_logged_in():'
p110
ssg87
S'()'
p111
sg89
S'<module>'
p112
sa(dp113
g66
S'/home/navya/itws2/web2pynew/gluon/dal.py'
p114
sg68
(dp115
S'fields'
p116
S'(<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>)'
p117
sS'self'
p118
S'<DAL uri="sqlite://storage.sqlite">'
p119
sS'args'
p120
g21
sS'tablename'
p121
S"'likes'"
p122
sS'table'
p123
g95
sS'self.lazy_define_table'
p124
S'<bound method DAL.lazy_define_table of <DAL uri="sqlite://storage.sqlite">>'
p125
ssg74
I7651
sg75
(dp126
I7648
S'            self._LAZY_TABLES[tablename] = (tablename,fields,args)'
p127
sI7649
S'            table = None'
p128
sI7650
S'        else:'
p129
sI7651
S'            table = self.lazy_define_table(tablename,*fields,**args)'
p130
sI7652
S'        if not tablename in self.tables:'
p131
sI7653
S'            self.tables.append(tablename)'
p132
sI7654
S'        return table'
p133
sI7655
S''
sI7646
S'                    % (tablename,invalid_args))'
p134
sI7647
S'        if self._lazy_tables and not tablename in self._LAZY_TABLES:'
p135
ssg87
S'(self=<DAL uri="sqlite://storage.sqlite">, tablename=\'likes\', *fields=(<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>), **args={})'
p136
sg89
S'define_table'
p137
sa(dp138
g66
S'/home/navya/itws2/web2pynew/gluon/dal.py'
p139
sg68
(dp140
S'polymodel'
p141
S'None'
p142
ssg74
I7688
sg75
(dp143
I7683
S'            try:'
p144
sI7684
S'                GLOBAL_LOCKER.acquire()'
p145
sI7685
S'                self._lastsql = self._adapter.create_table('
p146
sI7686
S'                    table,migrate=migrate,'
p147
sI7687
S'                    fake_migrate=fake_migrate,'
p148
sI7688
S'                    polymodel=polymodel)'
p149
sI7689
S'            finally:'
p150
sI7690
S'                GLOBAL_LOCKER.release()'
p151
sI7691
S'        else:'
p152
sI7692
S'            table._dbt = None'
p153
ssg87
S'(self=<DAL uri="sqlite://storage.sqlite">, tablename=\'likes\', *fields=(<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>), **args={})'
p154
sg89
S'lazy_define_table'
p155
sa(dp156
g66
S'/home/navya/itws2/web2pynew/gluon/dal.py'
p157
sg68
(dp158
S'fake_migrate'
p159
S'False'
p160
ssg74
I990
sg75
(dp161
I992
S'        return query'
p162
sI993
S''
sI994
S'    def migrate_table('
p163
sI985
S'            self.file_close(tfile)'
p164
sI986
S'            if sql_fields != sql_fields_old:'
p165
sI987
S'                self.migrate_table(table,'
p166
sI988
S'                                   sql_fields, sql_fields_old,'
p167
sI989
S'                                   sql_fields_aux, logfile,'
p168
sI990
S'                                   fake_migrate=fake_migrate)'
p169
sI991
S'        self.file_close(logfile)'
p170
ssg87
S'(self=<gluon.dal.SQLiteAdapter object>, table=<Table likes (id,username,postname,unique_key)>, migrate=True, fake_migrate=False, polymodel=None)'
p171
sg89
S'create_table'
p172
sa(dp173
g66
S'/home/navya/itws2/web2pynew/gluon/dal.py'
p174
sg68
(dp175
S'self'
p176
S'<gluon.dal.SQLiteAdapter object>'
p177
sS'self.execute'
p178
S'<bound method SQLiteAdapter.execute of <gluon.dal.SQLiteAdapter object>>'
p179
sS'sub_query'
p180
S"'ALTER TABLE likes ADD unique_key CHAR(512) NOT NULL UNIQUE;'"
p181
ssg74
I1093
sg75
(dp182
I1088
S'                              % datetime.datetime.today().isoformat())'
p183
sI1089
S"                db['_lastsql'] = '\\n'.join(query)"
p184
sI1090
S'                for sub_query in query:'
p185
sI1091
S"                    logfile.write(sub_query + '\\n')"
p186
sI1092
S'                    if not fake_migrate:'
p187
sI1093
S'                        self.execute(sub_query)'
p188
sI1094
S'                        # Caveat: mysql, oracle and firebird do not allow multiple alter table'
p189
sI1095
S'                        # in one transaction so we must commit partial transactions and'
p190
sI1096
S'                        # update table._dbt after alter table.'
p191
sI1097
S'                        if db._adapter.commit_on_alter_table:'
p192
ssg87
S"(self=<gluon.dal.SQLiteAdapter object>, table=<Table likes (id,username,postname,unique_key)>, sql_fields={'id': {'length': 512, 'notnull': False, 'sortable': 1, 'sql': 'INTEGER PRIMARY KEY AUTOINCREMENT', 'type': 'id', 'unique': False}, 'postname': {'length': 512, 'notnull': False, 'sortable': 3, 'sql': 'INTEGER REFERENCES posts (id) ON DELETE CASCADE', 'type': 'reference posts', 'unique': False}, 'unique_key': {'length': 512, 'notnull': True, 'sortable': 4, 'sql': 'CHAR(512) NOT NULL UNIQUE', 'type': 'string', 'unique': True}, 'username': {'length': 512, 'notnull': False, 'sortable': 2, 'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE', 'type': 'reference auth_user', 'unique': False}}, sql_fields_old={'id': {'length': 512, 'notnull': False, 'sortable': 1, 'sql': 'INTEGER PRIMARY KEY AUTOINCREMENT', 'type': 'id', 'unique': False}, 'postid': {'length': 512, 'notnull': False, 'sortable': 4, 'sql': 'INTEGER REFERENCES posts (id) ON DELETE CASCADE', 'type': 'reference posts', 'unique': False}, 'total_likes': {'length': 512, 'notnull': False, 'sortable': 2, 'sql': 'INTEGER', 'type': 'integer', 'unique': False}, 'user_name': {'length': 32768, 'notnull': False, 'sortable': 3, 'sql': 'TEXT', 'type': 'text', 'unique': False}}, sql_fields_aux={'id': {'sql': 'INTEGER PRIMARY KEY AUTOINCREMENT'}, 'postname': {'sql': 'INTEGER REFERENCES posts (id) ON DELETE CASCADE'}, 'unique_key': {'sql': 'CHAR(512) NOT NULL UNIQUE'}, 'username': {'sql': 'INTEGER REFERENCES auth_user (id) ON DELETE CASCADE'}}, logfile=<gluon.portalocker.LockedFile object>, fake_migrate=False)"
p193
sg89
S'migrate_table'
p194
sa(dp195
g66
S'/home/navya/itws2/web2pynew/gluon/dal.py'
p196
sg68
(dp197
S'a'
S"('ALTER TABLE likes ADD unique_key CHAR(512) NOT NULL UNIQUE;',)"
p198
sS'self'
p199
S'<gluon.dal.SQLiteAdapter object>'
p200
sS'b'
g21
sS'self.log_execute'
p201
S'<bound method SQLiteAdapter.log_execute of <gluon.dal.SQLiteAdapter object>>'
p202
ssg74
I1758
sg75
(dp203
I1760
S'    def represent(self, obj, fieldtype):'
p204
sI1761
S'        field_is_type = fieldtype.startswith'
p205
sI1762
S'        if isinstance(obj, CALLABLETYPES):'
p206
sI1753
S'        self.db._timings.append((command,time.time()-t0))'
p207
sI1754
S'        del self.db._timings[:-TIMINGSSIZE]'
p208
sI1755
S'        return ret'
p209
sI1756
S''
sI1757
S'    def execute(self, *a, **b):'
p210
sI1758
S'        return self.log_execute(*a, **b)'
p211
sI1759
S''
ssg87
S"(self=<gluon.dal.SQLiteAdapter object>, *a=('ALTER TABLE likes ADD unique_key CHAR(512) NOT NULL UNIQUE;',), **b={})"
p212
sg89
S'execute'
p213
sa(dp214
g66
S'/home/navya/itws2/web2pynew/gluon/dal.py'
p215
sg68
(dp216
S'a'
S"('ALTER TABLE likes ADD unique_key CHAR(512) NOT NULL UNIQUE;',)"
p217
sS'b'
g21
sS'self'
p218
S'<gluon.dal.SQLiteAdapter object>'
p219
sS'ret'
p220
g95
sS'self.cursor'
p221
S'<sqlite3.Cursor object>'
p222
sS'self.cursor.execute'
p223
S'<built-in method execute of sqlite3.Cursor object>'
p224
ssg74
I1752
sg75
(dp225
I1747
S'        command = a[0]'
p226
sI1748
S'        if self.db._debug:'
p227
sI1749
S"            LOGGER.debug('SQL: %s' % command)"
p228
sI1750
S'        self.db._lastsql = command'
p229
sI1751
S'        t0 = time.time()'
p230
sI1752
S'        ret = self.cursor.execute(*a, **b)'
p231
sI1753
S'        self.db._timings.append((command,time.time()-t0))'
p232
sI1754
S'        del self.db._timings[:-TIMINGSSIZE]'
p233
sI1755
S'        return ret'
p234
sI1756
S''
ssg87
S"(self=<gluon.dal.SQLiteAdapter object>, *a=('ALTER TABLE likes ADD unique_key CHAR(512) NOT NULL UNIQUE;',), **b={})"
p235
sg89
S'log_execute'
p236
sasS'pyver'
p237
S'Python 2.7.6: /usr/bin/python (prefix: /usr)'
p238
sS'session'
p239
g61
(S's^\t\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">auth</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">expiration</td><td valign="top">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">hmac_key</td><td valign="top">:</td><td><div>6d0582c0-495d-49b3-973f-dd736d98fbf9</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_visit</td><td valign="top">:</td><td><div>datetime.datetime(2016, 3, 28, 21, 9, 45, 544677)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remember</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">user</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">Birthdate</td><td valign="top">:</td><td><div>datetime.date(1997, 4, 28)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">Gender</td><td valign="top">:</td><td><div>Female</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">Hometown</td><td valign="top">:</td><td><div>Indore</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">email</td><td valign="top">:</td><td><div>kharenavya@gmail.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">first_name</td><td valign="top">:</td><td><div>Navya</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">id</td><td valign="top">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_name</td><td valign="top">:</td><td><div>Khare</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">registration_id</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">registration_key</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">reset_password_key</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">user_groups</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">1</td><td valign="top">:</td><td><div>user_1</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">flash</td><td valign="top">:</td><td><div>None</div></td></tr></table></div>'
tRp240
sS'etype'
p241
S"<class 'sqlite3.OperationalError'>"
p242
sS'date'
p243
S'Mon Mar 28 21:09:45 2016'
p244
sS'response'
p245
g61
(S's\xe9\x11\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">body</td><td valign="top">:</td><td><div>&lt;cStringIO.StringO object at 0x7fcc828ad340&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cookies</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">session_id_foodily</td><td valign="top">:</td><td><div>127.0.0.1-f0fe83a9-9f91-49b4-a79b-fe291c9fa20d<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">delimiters</td><td valign="top">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">files</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">flash</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">generic_patterns</td><td valign="top">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">headers</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">X-Powered-By</td><td valign="top">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">menu</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">meta</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">models_to_run</td><td valign="top">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/index/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">postprocessing</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_cookie_expires</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_data_name</td><td valign="top">:</td><td><div>session_data_foodily</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_file</td><td valign="top">:</td><td><div>&lt;open file &#x27;/home/navya/itws2/web2pynew/applications/FOODILY/sessions/127.0.0.1-f0fe83a9-9f91-49b4-a79b-fe291c9fa20d&#x27;, mode &#x27;rb+&#x27; at 0x7fcc8245c780&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_filename</td><td valign="top">:</td><td><div>/home/navya/itws2/web2pynew/applications/FOODILY/sessions/127.0.0.1-f0fe83a9-9f91-49b4-a79b-fe291c9fa20d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id</td><td valign="top">:</td><td><div>127.0.0.1-f0fe83a9-9f91-49b4-a79b-fe291c9fa20d</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_name</td><td valign="top">:</td><td><div>session_id_foodily</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_locked</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_new</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_storage_type</td><td valign="top">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">status</td><td valign="top">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">view</td><td valign="top">:</td><td><div>default/index.html</div></td></tr></table></div>'
tRp246
sS'locals'
p247
(dp248
S'a'
S"('ALTER TABLE likes ADD unique_key CHAR(512) NOT NULL UNIQUE;',)"
p249
sS'self'
p250
S'<gluon.dal.SQLiteAdapter object>'
p251
sS'b'
g21
sS'command'
p252
S"'ALTER TABLE likes ADD unique_key CHAR(512) NOT NULL UNIQUE;'"
p253
sS't0'
p254
S'1459179585.606126'
p255
sssS'traceback'
p256
S'Traceback (most recent call last):\n  File "/home/navya/itws2/web2pynew/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/navya/itws2/web2pynew/applications/FOODILY/models/db.py", line 116, in <module>\n    Field(\'unique_key\', unique=True, notnull=True,  compute= lambda row: "%(username)s-%(songname)s"),\n  File "/home/navya/itws2/web2pynew/gluon/dal.py", line 7651, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/home/navya/itws2/web2pynew/gluon/dal.py", line 7688, in lazy_define_table\n    polymodel=polymodel)\n  File "/home/navya/itws2/web2pynew/gluon/dal.py", line 990, in create_table\n    fake_migrate=fake_migrate)\n  File "/home/navya/itws2/web2pynew/gluon/dal.py", line 1093, in migrate_table\n    self.execute(sub_query)\n  File "/home/navya/itws2/web2pynew/gluon/dal.py", line 1758, in execute\n    return self.log_execute(*a, **b)\n  File "/home/navya/itws2/web2pynew/gluon/dal.py", line 1752, in log_execute\n    ret = self.cursor.execute(*a, **b)\nOperationalError: Cannot add a UNIQUE column\n'
p257
s.